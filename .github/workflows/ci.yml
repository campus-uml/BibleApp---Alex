name: CI/CD y Cypress E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'yarn'

      - name: 📦 Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: 🏗️ Build project
        run: yarn build
        env:
          VITE_API_SUPABASE_URL: ${{ secrets.VITE_API_SUPABASE_URL }}
          VITE_API_SUPABASE_ANON_KEY: ${{ secrets.VITE_API_SUPABASE_ANON_KEY }}

      - name: 📤 Subir artefacto de build
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  cypress-run:
    runs-on: ubuntu-latest
    needs: ci
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'yarn'

      - name: 📦 Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: 📥 Descargar artefacto de build
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: 🔧 Configurar variables de entorno
        run: |
          echo "VITE_API_SUPABASE_URL=${{ secrets.VITE_API_SUPABASE_URL }}" >> .env
          echo "VITE_API_SUPABASE_ANON_KEY=${{ secrets.VITE_API_SUPABASE_ANON_KEY }}" >> .env

      - name: 🚀 Iniciar el servidor
        run: |
          yarn preview &
          sleep 10

      - name: 🧪 Ejecutar Cypress
        uses: cypress-io/github-action@v6
        with:
          wait-on: "http://localhost:4173"
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VITE_API_SUPABASE_URL: ${{ secrets.VITE_API_SUPABASE_URL }}
          VITE_API_SUPABASE_ANON_KEY: ${{ secrets.VITE_API_SUPABASE_ANON_KEY }}

      - name: 📊 Subir cobertura a Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  deploy:
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🚀 Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}