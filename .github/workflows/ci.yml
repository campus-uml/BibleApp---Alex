name: CI/CD y Cypress E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: 📦 Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: 🏗️ Build project
        run: yarn build

  cypress-run:
    runs-on: ubuntu-latest
    needs: ci
    strategy:
      fail-fast: false
      matrix:
        containers: ["cnt-1", "cnt-2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: 📦 Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: Configurar variables de entorno para Supabase
        run: |
          echo "VITE_API_SUPABASE_URL=${{ secrets.VITE_API_SUPABASE_URL }}" >> $GITHUB_ENV
          echo "VITE_API_SUPABASE_ANON_KEY=${{ secrets.VITE_API_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV

      - name: Iniciar el servidor
        run: |
          yarn dev &  # Ejecuta el servidor en segundo plano
          sleep 30    # Espera 30 segundos para asegurarse de que el servidor se haya iniciado

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          wait-on: "http://localhost:5173"
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}